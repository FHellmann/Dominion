buildscript {
    repositories {
        google()
        jcenter()
    }
}

subprojects { project ->
    tasks.withType(JavaCompile) {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    tasks.withType(Jar) {
        duplicatesStrategy = DuplicatesStrategy.FAIL
    }
}

subprojects { project ->
    repositories {
        google()
        jcenter()
    }

    apply plugin: 'checkstyle'
    apply plugin: 'pmd'
    apply plugin: 'findbugs'

    checkstyle {
        toolVersion = '8.5'
        configFile = rootProject.file('stylechecker/checkstyle.xml')
        configProperties.checkStyleConfigDir = rootProject.rootDir
        sourceSets = sourceSets.main
        reportsDir = file("$project.buildDir/reports/checkstyle")
    }

    task checkstyle(type: Checkstyle) {
        source 'src'
        include '**/*.java'
        exclude '**/gen/**'

        // empty classpath
        classpath = files()
    }

    /*
    pmd {
        ignoreFailures = true
        sourceSets = [sourceSets.main]
        reportsDir = file("$project.buildDir/reports/pmd")
        ruleSetFiles = files("codestyle/stylechecker/pmd.xml")
    }

    task pmd(type: pmd) {

    }

    findbugs {
        ignoreFailures = true
        toolVersion = "2.0.1"
        sourceSets = [sourceSets.main]
        reportsDir = file("$project.buildDir/reports/findbugs")
        effort = "max"
    }
    */

    afterEvaluate {
        if (project.tasks.findByName('check')) {
            check.dependsOn('checkstyle')
        }
    }
}
